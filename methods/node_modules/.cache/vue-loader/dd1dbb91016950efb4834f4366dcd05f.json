{"remainingRequest":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amanda/Documents/vuejs-br/methods/App.vue?vue&type=style&index=0&id=472cff63&scoped=true&lang=css&","dependencies":[{"path":"/home/amanda/Documents/vuejs-br/methods/App.vue","mtime":1610739344868},{"path":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgp0YWJsZSB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHdpZHRoOjEwMCUKfQoKdGQsIHRoIHsKICBwYWRkaW5nOiAuM3JlbTsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\n  <div>\n    <h1>Lista de tarefas</h1>\n    <button @click=\"handleShowHideList\">Ver lista</button>\n    <input v-focus>\n    <table v-if=\"showList\">\n      <thead>\n        <tr>\n          <th>Título</th>\n          <th>Feita</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr \n          v-for=\"(task, index) in tasks\" :key=\"`${task}-${index}`\"\n          @dblclick=\"complete(task)\">\n          <td>{{ task.title }}</td>\n          <td>{{ task.isDone ? 'Sim' : 'Não' }}</td>\n          <button @click=\"handleRemove(task)\">&times;</button>\n        </tr>\n      </tbody>\n\n    </table>\n\n    <p v-else>Lista de tarefas escondida</p>\n  </div>\n</template>\n\n<script>\nconst focus = {\n  inserted: (el) => {\n    el.focus();\n  }\n}\n\nexport default {\n  directives: {\n    focus\n  },\n  data: () => ({\n    showList: false,\n    tasks:[\n      {\n        title: 'Fazer um curso',\n        isDone: true\n      },\n      {\n        title: 'Fazer comida',\n        isDone: false\n      }\n    ]\n  }),\n  methods: {\n    handleShowHideList() {\n      this.showList = !this.showList;\n    },\n    complete(task) {\n      this.tasks = this.tasks.map(t => {\n        if (t.title === task.title) {\n          console.log(t.title)\n          return { ...t, isDone: !t.isDone }\n        }\n\n        return { ...t };\n      })\n\n      console.log(this.tasks)\n    },\n    handleRemove(task) {\n      this.tasks = this.tasks.filter(t => t.title != task.title);\n    }\n  }\n}\n</script>\n\n<style scoped>\n  table {\n    text-align: center;\n    width:100%\n  }\n\n  td, th {\n    padding: .3rem;\n  }\n</style>"]}]}