{"remainingRequest":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/amanda/Documents/vuejs-br/methods/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/amanda/Documents/vuejs-br/methods/App.vue","mtime":1610740107957},{"path":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/amanda/.npm-global/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGZvY3VzID0gewogIGluc2VydGVkOiAoZWwpID0+IHsKICAgIGVsLmZvY3VzKCk7CiAgfQp9CgpleHBvcnQgZGVmYXVsdCB7CiAgZGlyZWN0aXZlczogewogICAgZm9jdXMKICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICBjdXJyZW50VGFzazogJycsCiAgICBzaG93TGlzdDogZmFsc2UsCiAgICB0YXNrczpbCiAgICAgIHsKICAgICAgICB0aXRsZTogJ0ZhemVyIHVtIGN1cnNvJywKICAgICAgICBpc0RvbmU6IHRydWUKICAgICAgfSwKICAgICAgewogICAgICAgIHRpdGxlOiAnRmF6ZXIgY29taWRhJywKICAgICAgICBpc0RvbmU6IGZhbHNlCiAgICAgIH0KICAgIF0KICB9KSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVBZGQoKSB7CiAgICAgIHRoaXMudGFza3MucHVzaCh7CiAgICAgICAgdGl0bGU6IHRoaXMuY3VycmVudFRhc2ssCiAgICAgICAgaXNEb25lOiBmYWxzZQogICAgICB9KTsKCiAgICAgIHRoaXMuY3VycmVudFRhc2sgPSAnJzsKICAgIH0sCiAgICBoYW5kbGVTaG93SGlkZUxpc3QoKSB7CiAgICAgIHRoaXMuc2hvd0xpc3QgPSAhdGhpcy5zaG93TGlzdDsKICAgIH0sCiAgICBjb21wbGV0ZSh0YXNrKSB7CiAgICAgIHRoaXMudGFza3MgPSB0aGlzLnRhc2tzLm1hcCh0ID0+IHsKICAgICAgICBpZiAodC50aXRsZSA9PT0gdGFzay50aXRsZSkgewogICAgICAgICAgY29uc29sZS5sb2codC50aXRsZSkKICAgICAgICAgIHJldHVybiB7IC4uLnQsIGlzRG9uZTogIXQuaXNEb25lIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB7IC4uLnQgfTsKICAgICAgfSkKCiAgICAgIGNvbnNvbGUubG9nKHRoaXMudGFza3MpCiAgICB9LAogICAgaGFuZGxlUmVtb3ZlKHRhc2spIHsKICAgICAgdGhpcy50YXNrcyA9IHRoaXMudGFza3MuZmlsdGVyKHQgPT4gdC50aXRsZSAhPSB0YXNrLnRpdGxlKTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\n  <div>\n    <h1>Lista de tarefas</h1>\n    <button @click=\"handleShowHideList\">Ver lista</button>\n    <input \n      v-focus \n      v-model=\"currentTask\"\n      @keyup.enter=\"handleAdd\"\n    >\n    <button @click=\"handleShowHideList\">Ver lista</button>\n\n\n    <table v-if=\"showList\">\n      <thead>\n        <tr>\n          <th>Título</th>\n          <th>Feita</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr \n          v-for=\"(task, index) in tasks\" \n          :key=\"`${task}-${index}`\"\n          @dblclick=\"complete(task)\"\n          class=\"task-item\">\n\n          <td \n          :class=\"{\n            'line': task.isDone\n          }\">\n            {{ task.title }}\n          </td>\n\n          <td>{{ task.isDone ? 'Sim' : 'Não' }}</td>\n          <button @click=\"handleRemove(task)\">&times;</button>\n        </tr>\n      </tbody>\n\n    </table>\n\n    <p v-else>Lista de tarefas escondida</p>\n  </div>\n</template>\n\n<script>\nconst focus = {\n  inserted: (el) => {\n    el.focus();\n  }\n}\n\nexport default {\n  directives: {\n    focus\n  },\n  data: () => ({\n    currentTask: '',\n    showList: false,\n    tasks:[\n      {\n        title: 'Fazer um curso',\n        isDone: true\n      },\n      {\n        title: 'Fazer comida',\n        isDone: false\n      }\n    ]\n  }),\n  methods: {\n    handleAdd() {\n      this.tasks.push({\n        title: this.currentTask,\n        isDone: false\n      });\n\n      this.currentTask = '';\n    },\n    handleShowHideList() {\n      this.showList = !this.showList;\n    },\n    complete(task) {\n      this.tasks = this.tasks.map(t => {\n        if (t.title === task.title) {\n          console.log(t.title)\n          return { ...t, isDone: !t.isDone }\n        }\n\n        return { ...t };\n      })\n\n      console.log(this.tasks)\n    },\n    handleRemove(task) {\n      this.tasks = this.tasks.filter(t => t.title != task.title);\n    }\n  }\n}\n</script>\n\n<style scoped>\n  table {\n    text-align: center;\n    width:100%\n  }\n\n  td, th {\n    padding: .3rem;\n  }\n\n  .line {\n    text-decoration: line-through;\n  }\n\n  .task-item {\n    cursor: pointer;\n  }\n</style>"]}]}